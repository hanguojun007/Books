---
title: "ggplot语法-scale"
author: "大番薯本薯"
format: "html"
fig-width: 4
fig-height: 4
fig-align: center
execute:
  warning: false
---

# ggplot语法-scale

## 基本函数

ggplot 中有三种基本类型的scale函数，许多`scale_*`函数都是由此三种函数生成：

-   `continuous_scale()`
-   `discrete_scale()`
-   `binned_scale()`

打开任意一个`scale_*`函数的说明文档，有关`...`参数的说明都是来自于这三个函数。其中`continuous_scale()`，`binned_scale()`是连续变量，`discrete_scale()`是离散变量，三者的参数稍有不同，下面是总结表，✔️表示有该参数，❌表示没有。

| params       | continuous_scale | discrete_scale | binned_scale |
|--------------|------------------|----------------|--------------|
| aesthetics   | ✔️               | ✔️             | ✔️           |
| palette      | ✔️               | ✔️             | ✔️           |
| name         | ✔️               | ✔️             | ✔️           |
| limits       | ✔️               | ✔️             | ✔️           |
| breaks       | ✔️               | ✔️             | ✔️           |
| minor_breaks | ✔️               | ❌             | ❌           |
| n.breaks     | ✔️               | ❌             | ✔️           |
| nice.breaks  | ❌               | ❌             | ✔️           |
| right        | ❌               | ❌             | ✔️           |
| labels       | ✔️               | ✔️             | ✔️           |
| show.limits  | ❌               | ❌             | ✔️           |
| rescaler     | ✔️               | ❌             | ✔️           |
| oob          | ✔️               | ❌             | ✔️           |
| na.translate | ❌               | ✔️             | ❌           |
| na.value     | ✔️               | ✔️             | ✔️           |
| drop         | ❌               | ✔️             | ❌           |
| transform    | ✔️               | ❌             | ✔️           |
| guide        | ✔️               | ✔️             | ✔️           |
| expand       | ✔️               | ✔️             | ✔️           |
| position     | ✔️               | ✔️             | ✔️           |
| call         | ✔️               | ✔️             | ✔️           |
| super        | ✔️               | ✔️             | ✔️           |

上述参数的解释如下，更详细的内容请查看说明文档。

-   `aesthetics`：映射类型，例如：`color`,`shape`。
-   `palette`：
-   `name`：显示在轴或图例中的title。
-   `limits`：控制映射范围，当涉及轴时，超出范围的数据不会应用在绘图。三种输入类型：
    -   NULL：使用默认范围。
    -   vector：长度为2。
    -   function：读取原范围，生成新范围的函数。
-   `breaks`：控制轴或图例中的刻度划分。四种类型的输入：
    -   NULL：不添加breaks。
    -   waiver：使用默认函数。
    -   vector：提供一个固定的向量。
    -   function：提供生成一个向量的函数，scales R包有提供。
-   `minor_breaks`：连续变量才有的参数，控制更细致的刻度划分，类型输入同`breaks`。
-   `n.breaks`：当`breaks = waiver()`时，提供参数给默认函数，该函数在`continuous_scale`中默认生成最佳的分割向量，在`binned_scale`中提供额外参数设置。
-   `nice.breaks`：当`breaks = waiver()`时，提供参数给默认函数，判断是否生成最佳的分割向量，仅在`binned_scale`中出现。
-   `right`：仅在`binned_scale`中出现，控制区间是左闭合，还是右闭合，默认右闭合。
-   `labels`：控制轴或图例中的刻度标签，输入长度必须与`breaks`相同。五种输入类型：
    -   NULL：不添加label。
    -   waiver：使用默认值。
    -   character vector：字符向量。
    -   expression vector：表达向量。
    -   function：读取`breaks`值，生成等长的向量。
-   `show.limits`：在`binned_scale`中控制是否将范围的左右两端展示为刻线。
-   `rescaler`：将输入的值转换为\[0,1\]范围，通常使用`scales::rescale()`。
-   `oob`：处理超出`limits`设定范围值的方法，四种输入类型：
    -   function
    -   scales::censor()：`continuous_scale`默认，超出范围的值设为`NA`。
    -   scales::squish()：`binned_scale`默认，超出范围的值挤压到临近范围内。
    -   scales::squish_infinite()：将无穷大挤压到临近范围内。
-   `na.translate`：仅在`discrete_scale`中出现，控制是否显示`NA`，`TRUE`时显示，但`NA`总是在轴的最右端。
-   `na.value`：使用该值替换`NA`。在`discrete_scale`中，只有当`na.translate = TRUE`时有效，此时`NA`依旧在轴的最右端。
-   `drop`：仅在`discrete_scale`中出现，`TRUE`时会丢弃不再数据中的`level`，`level`会显示在图例中，此处用来控制图例。
-   `transform`：由`scales`R包提供一个转换对象，该对象可以产出默认的`breaks`,`labels`。该参数适用于连续变量。
-   `gudie`：提供一个控制图例的函数。
-   `expand`：只适用于轴，使用`expansion()`函数延伸轴的左右两端，连续变量默认左右两端颜色5%，离散变量延伸 0.6 unit。
-   `position`：只适用于轴，控制轴的位置，上下左右。
-   `call`：生成提示信息。
-   `super`：所属类。

## guides()

`guide`参数控制图例类型，ggplot提供了5中图例类型：

| Scale type                                         | Default guide type |
|----------------------------------------------------|--------------------|
| continuous scales for colour/fill aesthetics       | colourbar          |
| binned scales for colour/fill aesthetics           | coloursteps        |
| position scales (continuous, binned and discrete)  | axis               |
| discrete scales (except position scales)           | legend             |
| binned scales (except position/colour/fill scales) | bins               |

## limit-oob

oob参数不同，显示结果也不同。如下图，默认范围的`limits`会显示全部；当设置范围后，会将超出范围的数据移除显示范围，参数`oob`控制如何显示这些数据，`oob`默认值会视作`NA`，`oob = scales::squish`会将其挤压到临近范围。

```{r}
#| layout-ncol: 3

df <- data.frame(x = 1:6, y = 8:13)
base <- ggplot(df, aes(x, y)) +
  geom_col(aes(fill = x)) + # bar chart
  geom_vline(xintercept = 3.5, colour = "red") # for visual clarity only

base
base + scale_fill_gradient(limits = c(1, 3))
base + scale_fill_gradient(limits = c(1, 3), oob = scales::squish)
```

## 图例

ggplot 会自动将属于一个变量的美学映射的图例进行合并，如下图，但是当图例的title不同时，会分别绘制。

```{r}
#| layout-ncol: 3

toy <- data.frame(
  const = 1,
  up = 1:4,
  txt = letters[1:4],
  big = (1:4) * 1000,
  log = c(2, 5, 10, 2000)
)

base <- ggplot(toy, aes(const, up)) +
  geom_point(aes(shape = txt, colour = txt)) +
  scale_x_continuous(NULL, breaks = NULL)

base
base + labs(shape = "Split legend")
base + labs(shape = "Merged legend", colour = "Merged legend")
```

ggplot提供了多种图例类型，在`layer`函数中使用`key_glyph`进行设置。更多类型见`?draw_key`

```{r}
#| layout-ncol: 2

base <- ggplot(economics, aes(date, psavert, color = "savings"))

base + geom_line()
base + geom_line(key_glyph = "timeseries")
```


## new scale

ggplot不支持多个变量对应一个美学映射。使用`ggnewscale::new_scale()`系列函数可以创建新的美学映射。

```{r}
#| layout-ncol: 2

base <- ggplot(mpg, aes(displ, hwy)) +
  geom_point(aes(colour = factor(year)), size = 5) +
  scale_colour_brewer("year", type = "qual", palette = 5)

base
base +
  ggnewscale::new_scale_colour() +
  geom_point(aes(colour = cyl == 4), size = 1, fill = NA) +
  scale_colour_manual("4 cylinder", values = c("grey60", "black"))
```